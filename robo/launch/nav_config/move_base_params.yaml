controller_frequency: 15.0 
recovery_behavior_enabled: true

base_local_planner: dwa_local_planner/DWAPlannerROS

recovery_behaviors:
#  - name: 'super_conservative_reset'
#    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'conservative_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'aggressive_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'move_slow_and_clear'
    type: 'move_slow_and_clear/MoveSlowAndClear'
 
DWAPlannerROS: 
  acc_lim_theta: 3.2
  acc_lim_x: 2.5
  acc_lim_y: 2.5
  acc_limit_trans: 0.1

  max_rot_vel: 0.2
  max_scaling_factor: 0.2
  max_trans_vel: 0.55
  max_vel_x: 0.55
  max_vel_y: 0.0

  min_rot_vel: 0.0
  min_trans_vel: 0.0
  min_vel_x: 0.0
  min_vel_y: 0.0

  angular_sim_granularity: 0.1
  forward_point_distance: 0.325
  occdist_scale: 0.01 #The weighting for how much the controller should attempt to avoid obstacles
  oscillation_reset_angle: 0.2
  oscillation_reset_dist: 0.05 #How far the robot must travel in meters before oscillation flags are reset
 
  goal_distance_bias: 24.0 #The weighting for how much the controller should attempt to reach its local goal, also controls speed
  path_distance_bias: 32.0 #The weighting for how much the controller should stay close to the path it was given

  prune_plan: false #Trim off parts of the global plan that are far enough behind the robot
  restore_defaults: false

  rot_stopped_vel: 0.0 #The rotational velocity below which the robot is considered stopped
  trans_stopped_vel: 0.1 #The translational velocity below which the robot is considered stopped

  scaling_speed: 0.25
  sim_granularity: 0.025
  sim_time: 1.7
  stop_time_buffer: 0.2
 
  use_dwa: true
  vth_samples: 20
  vx_samples: 10
  vy_samples: 3

  xy_goal_tolerance: 0.3
  yaw_goal_tolerance: 0.5 # The rotational tolerance on reaching the goal

